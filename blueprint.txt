 12345
1
2 @
3   +
4
5

自分の座標 - ロボの座標 < 0 : ロボ座標-1
自分の座標 - ロボの座標 = 0 : ロボ座標変わらず
自分の座標 - ロボの座標 > 0 : ロボ座標+1

流れ
移動先入力
プレイヤー移動
ロボ移動

フィールドサイズは80 * 25

移動前マップと移動先マップを準備
移動先マップには、スクラップの位置だけ引き継ぐ
プレイヤーを移動先マップに配置
もし、移動前マップにロボットがいるor移動前マップがスクラップなら、移動不可
順番にロボを移動先マップに配置
もし、移動先マップにプレイヤーがいたらゲームオーバー
もし、移動先マップにロボがいるor移動先マップにスクラップがあるならスクラップ

Objectクラス(抽象クラス)
-x, y 現在いる座標
-get_position
-set_position

MoveObjectクラス(Object)
-moveメソッド

Robotクラス(MoveObject)
-sclap スクラップか否か
-moveメソッド 返り値:移動先に何があったか？
-killメソッド

Robotはリスト管理が好ましい(Robotリスト is Noneで調べられる？)

Playerクラス(MoveObject)
-moveメソッド(command) 返り値:ゲームオーバーかどうか？

Gameクラス
-score, level ゲームの基本情報
-robot_left レベルクリアまでの残りロボット数
-board[height][width] ゲームボード
// -collisionメソッド スクラップ化などの処理

before_board[][], after_board[][] 移動に使用するマップ


コマンドを受け取る関数
->curses noecho()
